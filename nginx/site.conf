server {
    listen 8080;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    location /tweets.json {
        proxy_pass   https://api.twitter.com/1.1/tweets/search/30day/production.json;

        set_by_lua $twitter_api_key 'return os.getenv("TWITTER_API_KEY")';

        # If you use a variable for proxy_pass, nginx uses its internal resolver which requires explicit config :(

        resolver 8.8.8.8;
        proxy_set_header authorization $twitter_api_key;
        proxy_http_version 1.1;
        proxy_cookie_domain twitter.com $server_name;
        proxy_buffering off; # Turn off buffer in order to get stream as-is
        proxy_set_header Host api.twitter.com;
    }
}
