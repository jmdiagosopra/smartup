{"version":3,"file":"chunk-85ef2c0a.js","sources":["../src/utils/carouselUtils.js"],"sourcesContent":["/* eslint-disable no-invalid-this*/\n/**\n  * @param {Component} component (this)\n  * @param {String} container Container reference\n  */\nexport const touchGestures = (component, container) => {\n  const passiveParam = _supportsPassive() ? { passive: true } : false;\n  const cracksSlider = component.shadowRoot.querySelector(container);\n\n  cracksSlider.addEventListener('touchstart', _onTouchStart.bind(component, container), passiveParam);\n  cracksSlider.addEventListener('touchend', _onTouchEnd.bind(component, container), passiveParam);\n  cracksSlider.addEventListener('touchmove', _onTouchMove.bind(component, container), passiveParam);\n};\n\n/**\n  * @param {String} container Container reference\n  * @param {Event} event On touch start\n  */\nfunction _onTouchStart(container, event) {\n  this._stopAutoplay(this);\n  updateAnimationSpeed(0, this, container);\n  this.touchStartX = event.touches[0].clientX;\n  this.touchStartY = event.touches[0].clientY;\n}\n\n/**\n   * Operation to be performed on touch end\n   *\n   * Calculates the angle of the touch movement and moves the X/Y position accordingly.\n   * If the move length or the angle is not enough, resets the position\n   *\n   * @param {String} container Container reference\n   * @param {Object} event The event object\n   */\nfunction _onTouchEnd(container, event) {\n  this.touchEndX = event.changedTouches[0].clientX;\n  this.touchEndY = event.changedTouches[0].clientY;\n  const touchLengthX = this.touchStartX - this.touchEndX;\n  const touchLengthY = this.touchStartY - this.touchEndY;\n  const angle = Math.atan2(touchLengthY, touchLengthX) * 180 / Math.PI;\n  if (Math.abs(angle) < this.minTouchAngle || Math.abs(angle) > (180 - this.minTouchAngle)) {\n    if (touchLengthX > this.minTouchLength) {\n      this._next();\n    } else if (touchLengthX < -this.minTouchLength) {\n      this._prev();\n    } else {\n      updateXPosition(null, this, container);\n    }\n  } else {\n    updateXPosition(null, this, container);\n  }\n  this._startAutoplay();\n  updateAnimationSpeed(this.animationSpeed, this, container);\n}\n\n/**\n   * Operation to be performed on touch move\n   *\n   * Moves the element in the X axis\n   * @param {String} container Container reference\n   * @param {Object} event The event object returned by the browser\n   */\nfunction _onTouchMove(container, event) {\n  const touchMoveX = event.touches[0].clientX;\n  const touchLength = this.touchStartX - touchMoveX;\n  updateXPosition(touchLength, this, container);\n}\n\n/**\n   * Function to update animation speed\n   * @param {number} animationSpeed New animation speed. Defaults to this.animationSpeed\n   * @param {Component} component Component (this)\n   * @param {String} container Container reference\n   */\nexport function updateAnimationSpeed(animationSpeed, component, container) {\n  component.shadowRoot.querySelector(container).style.transition = `transform ${animationSpeed}s ease-in-out`;\n}\n\n/**\n  * Update X translation of the slider\n  * @param {Number} offset Number of pixels to move from actual position\n  * @param {Component} component Component (this)\n  * @param {String} container Container reference\n  */\nexport function updateXPosition(offset = 0, component, container) {\n  const actualPosition = (component.index * component.sliderWidth) + offset;\n  if (component.sliderWidth) {\n    component.shadowRoot.querySelector(container).style.transform = `translate(-${actualPosition}px)`;\n  } else {\n    component.coordinate = -(component.shadowRoot.querySelector(container).clientWidth * component.index) - offset;\n  }\n  setTimeout(() => {\n    if (component.sliderWidth) component._updateItemsVisibility();\n  }, component.animationSpeed * 1000);\n}\n\n/**\n   * Returns if the browser supports the passive property in touch events\n   *\n   * Test via a getter in the options object to see if the passive property is accessed\n   *\n   * @return {boolean}\n   */\nexport const _supportsPassive = () => {\n  let supportsPassive = false;\n  try {\n    const opts = Object.defineProperty({}, 'passive', {\n      get: function() {\n        supportsPassive = true;\n        return supportsPassive;\n      },\n    });\n    window.addEventListener('testPassive', null, opts);\n    window.removeEventListener('testPassive', null, opts);\n  } catch (e) { return e; }\n  return supportsPassive;\n};\n"],"names":["touchGestures","component","container","passiveParam","_supportsPassive","passive","cracksSlider","shadowRoot","querySelector","addEventListener","event","this","_stopAutoplay","updateAnimationSpeed","touchStartX","touches","clientX","touchStartY","clientY","bind","touchEndX","changedTouches","touchEndY","touchLengthX","touchLengthY","angle","Math","atan2","PI","abs","minTouchAngle","minTouchLength","_next","_prev","updateXPosition","_startAutoplay","animationSpeed","touchMoveX","style","transition","offset","actualPosition","index","sliderWidth","transform","coordinate","clientWidth","setTimeout","_updateItemsVisibility","supportsPassive","opts","Object","defineProperty","get","window","removeEventListener","e"],"mappings":"AAKY,MAACA,EAAgB,CAACC,EAAWC,KACvC,MAAMC,IAAeC,KAAqB,CAAEC,SAAS,GAC/CC,EAAeL,EAAUM,WAAWC,cAAcN,GAExDI,EAAaG,iBAAiB,aAShC,SAAuBP,EAAWQ,GAChCC,KAAKC,cAAcD,MACnBE,EAAqB,EAAGF,KAAMT,GAC9BS,KAAKG,YAAcJ,EAAMK,QAAQ,GAAGC,QACpCL,KAAKM,YAAcP,EAAMK,QAAQ,GAAGG,SAbsBC,KAAKlB,EAAWC,GAAYC,GACtFG,EAAaG,iBAAiB,WAwBhC,SAAqBP,EAAWQ,GAC9BC,KAAKS,UAAYV,EAAMW,eAAe,GAAGL,QACzCL,KAAKW,UAAYZ,EAAMW,eAAe,GAAGH,QACzC,MAAMK,EAAeZ,KAAKG,YAAcH,KAAKS,UACvCI,EAAeb,KAAKM,YAAcN,KAAKW,UACvCG,EAAiD,IAAzCC,KAAKC,MAAMH,EAAcD,GAAsBG,KAAKE,GAC9DF,KAAKG,IAAIJ,GAASd,KAAKmB,eAAiBJ,KAAKG,IAAIJ,GAAU,IAAMd,KAAKmB,cACpEP,EAAeZ,KAAKoB,eACtBpB,KAAKqB,QACIT,GAAgBZ,KAAKoB,eAC9BpB,KAAKsB,QAELC,EAAgB,KAAMvB,KAAMT,GAG9BgC,EAAgB,KAAMvB,KAAMT,GAE9BS,KAAKwB,iBACLtB,EAAqBF,KAAKyB,eAAgBzB,KAAMT,IA1CMiB,KAAKlB,EAAWC,GAAYC,GAClFG,EAAaG,iBAAiB,YAmDhC,SAAsBP,EAAWQ,GAC/B,MAAM2B,EAAa3B,EAAMK,QAAQ,GAAGC,QAEpCkB,EADoBvB,KAAKG,YAAcuB,EACV1B,KAAMT,IAtDqBiB,KAAKlB,EAAWC,GAAYC,IA+DtF,SAAgBU,EAAqBuB,EAAgBnC,EAAWC,GAC9DD,EAAUM,WAAWC,cAAcN,GAAWoC,MAAMC,wBAA0BH,iBAShF,SAAgBF,EAAgBM,EAAS,EAAGvC,EAAWC,GACrD,MAAMuC,EAAkBxC,EAAUyC,MAAQzC,EAAU0C,YAAeH,EAC/DvC,EAAU0C,YACZ1C,EAAUM,WAAWC,cAAcN,GAAWoC,MAAMM,wBAA0BH,OAE9ExC,EAAU4C,YAAe5C,EAAUM,WAAWC,cAAcN,GAAW4C,YAAc7C,EAAUyC,MAASF,EAE1GO,WAAW,KACL9C,EAAU0C,aAAa1C,EAAU+C,0BACT,IAA3B/C,EAAUmC,gBAUf,MAAahC,EAAmB,KAC9B,IAAI6C,GAAkB,EACtB,IACE,MAAMC,EAAOC,OAAOC,eAAe,GAAI,UAAW,CAChDC,IAAK,WAEH,OADAJ,GAAkB,KAItBK,OAAO7C,iBAAiB,cAAe,KAAMyC,GAC7CI,OAAOC,oBAAoB,cAAe,KAAML,GAChD,MAAOM,GAAK,OAAOA,EACrB,OAAOP"}